using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using ModularMonolith.Users.Domain;
using ModularMonolith.Users.Domain.ValueObjects;
using ModularMonolith.Roles.Domain.ValueObjects;

namespace ModularMonolith.Users.Infrastructure.Configurations;

/// <summary>
/// Entity Framework configuration for UserRole entity
/// </summary>
public class UserRoleConfiguration : IEntityTypeConfiguration<UserRole>
{
    public void Configure(EntityTypeBuilder<UserRole> builder)
    {
        builder.ToTable("UserRoles");
        
        // Primary key
        builder.HasKey(ur => ur.Id);
        builder.Property(ur => ur.Id)
            .ValueGeneratedNever(); // UUID v7 generated by BaseEntity
        
        // Value object conversions
        builder.Property(ur => ur.UserId)
            .HasConversion(
                userId => userId.Value,
                value => UserId.From(value))
            .IsRequired()
            .HasColumnName("UserId");
            
        builder.Property(ur => ur.RoleId)
            .HasConversion(
                roleId => roleId.Value,
                value => RoleId.From(value))
            .IsRequired()
            .HasColumnName("RoleId");
            
        builder.Property(ur => ur.AssignedBy)
            .HasConversion(
                assignedBy => assignedBy != null ? assignedBy.Value : (Guid?)null,
                value => value.HasValue ? UserId.From(value.Value) : null)
            .IsRequired(false);
        
        // Simple properties
        builder.Property(ur => ur.AssignedAt)
            .HasColumnType("timestamptz")
            .IsRequired();
        
        // Base entity properties
        builder.Property(ur => ur.CreatedAt)
            .HasColumnType("timestamptz")
            .IsRequired();
            
        builder.Property(ur => ur.UpdatedAt)
            .HasColumnType("timestamptz")
            .IsRequired();
        
        // Unique constraint to prevent duplicate role assignments
        builder.HasIndex(ur => new { ur.UserId, ur.RoleId })
            .IsUnique()
            .HasDatabaseName("IX_UserRoles_UserId_RoleId");
        
        // Indexes for performance
        builder.HasIndex(ur => ur.UserId)
            .HasDatabaseName("IX_UserRoles_UserId");
            
        builder.HasIndex(ur => ur.RoleId)
            .HasDatabaseName("IX_UserRoles_RoleId");
            
        builder.HasIndex(ur => ur.AssignedAt)
            .HasDatabaseName("IX_UserRoles_AssignedAt");
        
        // Navigation properties temporarily disabled to resolve EF Core mapping issues
    }
}