using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using ModularMonolith.Authentication.Domain;
using ModularMonolith.Users.Domain.ValueObjects;
using ModularMonolith.Shared.Domain;

namespace ModularMonolith.Authentication.Infrastructure.Configurations;

/// <summary>
/// Entity Framework configuration for RefreshToken entity
/// </summary>
public class RefreshTokenConfiguration : BaseEntityConfiguration<RefreshToken>
{
    protected override void ConfigureEntity(EntityTypeBuilder<RefreshToken> builder)
    {
        builder.ToTable("RefreshTokens");
        
        // Primary key configuration is handled by base class
        builder.Property(rt => rt.Id)
            .ValueGeneratedNever(); // UUID v7 generated by BaseEntity using Guid.CreateVersion7()
        
        // Value object conversions
        builder.Property(rt => rt.UserId)
            .HasConversion(
                userId => userId.Value,
                value => UserId.From(value))
            .IsRequired();
        
        // Simple properties
        builder.Property(rt => rt.Token)
            .HasMaxLength(255)
            .IsRequired();
            
        builder.HasIndex(rt => rt.Token)
            .IsUnique()
            .HasFilter("\"IsRevoked\" = false") // PostgreSQL partial index for active tokens only
            .HasDatabaseName("IX_RefreshTokens_Token_Active");
        
        builder.Property(rt => rt.ExpiresAt)
            .HasColumnType("timestamptz")
            .IsRequired();
            
        builder.Property(rt => rt.RevokedAt)
            .HasColumnType("timestamptz")
            .IsRequired(false);
            
        builder.Property(rt => rt.IsRevoked)
            .IsRequired()
            .HasDefaultValue(false);
        
        // Base entity properties (timestamps and audit fields) are configured by base class
        // Override timestamp configuration to use PostgreSQL timestamptz
        builder.Property(rt => rt.CreatedAt)
            .HasColumnType("timestamptz");
            
        builder.Property(rt => rt.UpdatedAt)
            .HasColumnType("timestamptz");
            
        builder.Property(rt => rt.DeletedAt)
            .HasColumnType("timestamptz");
        
        // Additional indexes specific to RefreshToken entity
        builder.HasIndex(rt => rt.UserId)
            .HasDatabaseName("IX_RefreshTokens_UserId");
            
        builder.HasIndex(rt => rt.ExpiresAt)
            .HasFilter("\"IsRevoked\" = false") // Only index active tokens
            .HasDatabaseName("IX_RefreshTokens_ExpiresAt_Active");
            
        builder.HasIndex(rt => rt.IsRevoked)
            .HasDatabaseName("IX_RefreshTokens_IsRevoked");
    }
}